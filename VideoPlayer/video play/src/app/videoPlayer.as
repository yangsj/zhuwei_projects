package src.app{	import com.greensock.TweenLite;	import com.nova.core.AutoSetPostion;	import com.nova.core.FlvPlayer;	import com.nova.core.events.EventEx;		import flash.display.Bitmap;	import flash.display.MovieClip;	import flash.display.Shape;	import flash.display.SimpleButton;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.FullScreenEvent;	import flash.events.MouseEvent;	import flash.external.ExternalInterface;	import flash.filters.BlurFilter;	import flash.media.SoundMixer;	import flash.media.SoundTransform;	import flash.system.Security;	import flash.utils.setTimeout;	public class videoPlayer extends MovieClip {		private var videoIsPlay:Boolean;		public var fplayer:FlvPlayer=new FlvPlayer("",620,350);		private var isMute:Boolean;		private var rate;		private var orgX:Number;		private var orgY:Number;		private var oldX:Number;		private var oldY:Number;		private var oldX1:Number;		private var oldY1:Number;		private var oldX2:Number;		private var oldY2:Number;		private var sp=new Sprite();		private var bgSp=new Sprite();		private var isStart:Boolean;		private var loadingBarX:Number;		private var loadingBarY:Number;		private var loadingBarBgX:Number;		private var loadingBarBgY:Number;		private var _vwidth=620;		private var _vheight=350;		public function videoPlayer() {						if ( stage )				startApp( null );			else addEventListener( Event.ADDED_TO_STAGE, startApp );		}				private function startApp( event:Event ):void		{			Global.videoObj=this;			if(!Global._stage)Global._stage=stage;						Global._stage.scaleMode ="noScale";			//Security.allowDomain("*");			startBt.addEventListener(MouseEvent.CLICK,startFun);						var params:Object = stage.loaderInfo.parameters;			if ( params.hasOwnProperty( "src" ))				Global.curVideoURL=params["src"];			else Global.curVideoURL="Video.flv";						SoundMixer.soundTransform=new SoundTransform(1);			playBar.loadingBar.v.addEventListener(MouseEvent.MOUSE_DOWN,durationDownHandler);								playBar.playerBt.addEventListener(MouseEvent.MOUSE_DOWN,stageClick);							videoClick.visible=false;						//playBar.visible=false;			videoMC.loadingBar.visible=false;			playBar.muteBt.b0.addEventListener(MouseEvent.CLICK,muteBtFun);			playBar.muteBt.b1.addEventListener(MouseEvent.CLICK,muteBtFun);			playBar.muteBt.b2.addEventListener(MouseEvent.CLICK,muteBtFun);			fplayer.addEventListener("playerDuration",playerDuration);			fplayer.addEventListener("videoStart",videoStart);			fplayer.addEventListener("videoStop",videoStop);			fplayer.addEventListener("bufferEmpty",videoEmpty);			fplayer.addEventListener("bufferFull",videoFull);			rate=fplayer.video.width/fplayer.video.height;			orgX=_vwidth/2;			orgY=_vheight/2;			oldX=fplayer.video.x;			oldY=fplayer.video.y;						oldX2=startBt.x;			oldY2=startBt.y;			startBt.oldX=startBt.x;			startBt.oldY=startBt.y;			loadingBarX=videoMC.loadingBar.x;			loadingBarY=videoMC.loadingBar.y;			loadingBarBgX=videoMC.loadingBarBg.x;			loadingBarBgY=videoMC.loadingBarBg.y;						videoMC.addChild(fplayer.video);			startBt.visible=false;			fplayer.setVideoURL(Global.curVideoURL);						//playBar.visible=false;			/*			this.addEventListener(MouseEvent.MOUSE_OVER,function(){			TweenLite.to(playBar,1,{alpha:1});   			});			this.addEventListener(MouseEvent.MOUSE_OUT,function(){			TweenLite.to(playBar,1,{alpha:0});    			});*/			playBar.zoombtn.addEventListener(MouseEvent.CLICK, videozoom);						Global._stage.addEventListener(FullScreenEvent.FULL_SCREEN,_fullScreen);						var child1:Shape = new Shape();			child1.graphics.beginFill(0x000000);			child1.graphics.lineStyle(1, 1);			child1.graphics.drawRect(0, 0, 100, 100);			child1.graphics.endFill();			bgSp.addChild(child1);						videoMC.addChild(bgSp);						bgSp.visible=false;						videoMC.addChild(fplayer.video);						var child:Shape = new Shape();			child.graphics.beginFill(0xffffff);			child.graphics.lineStyle(1, 1);			child.graphics.drawRect(0, 0, 618,348);			child.graphics.endFill();			sp.addChild(child);			sp.alpha=0;									videoMC.addChild(videoMC.loadingBarBg);			videoMC.addChild(videoMC.loadingBar);						videoMC.loadingBar.visible=false;			videoMC.loadingBarBg.visible=false;			videoMC.addChild(sp);		}				public function startFun(e:MouseEvent){																videoClick.visible=true; 																																if(!isStart){																																		isStart=true;																	fplayer.setVideoURL(Global.curVideoURL);																	startBt.visible=false;																	videoIsPlay=true;																	videoMC.loadingBar.visible=true;																	videoMC.loadingBarBg.visible=true;																}else{																	fplayer.stream.resume();																	startBt.visible=false;																	videoIsPlay=true;																}		}		public function setVideo(url:String){			trace(url);			videoIsPlay=true;			Global.autoVideoPlay=false;			Global.curVideoURL=url;			fplayer.setVideoURL(Global.curVideoURL);			fplayer.stream.pause();			startBt.visible=true;			videoMC.loadingBar.visible=false;			videoMC.loadingBarBg.visible=false;			removeEventListener(Event.ENTER_FRAME,chkLoaded);			isStart=false;		}		public function stopVideo(){			fplayer.setVideoURL("");			fplayer.stopHandler();					}		private function stageClick(e:Event){			//fplayer.stream.pause();			//videoClick.visible=false;			//playBar.playerBt.gotoAndStop(1);			//startBt.visible=true;			//playBar.visible=false;						trace(videoIsPlay);			if(videoIsPlay){				videoIsPlay=false;				fplayer.stream.pause();				playBar.playerBt.gotoAndStop(1);			}else{				videoIsPlay=true;				fplayer.stream.resume();				playBar.playerBt.gotoAndStop(2);			}				}		private function videoEmpty(e:Event){			videoMC.loadingBar.visible=true;			videoMC.loadingBarBg.visible=true;			/*TweenLite.to(playBar,1,{alpha:0,onComplete:function(){						playBar.visible=false; 						 }});*/  		}		private function videoFull(e:Event){			videoMC.loadingBar.visible=false;			videoMC.loadingBarBg.visible=false;			playBar.visible=true;			playBar.alpha=0;			TweenLite.to(playBar,1,{alpha:1});  		}				private function closeInHtml(e:MouseEvent){			ExternalInterface.call("closepop");		}		//全屏		private function videozoom(e):void		{			Global._stage.displayState = "fullScreen";							fplayer.video.width=Global._stage.stageWidth;				fplayer.video.height=fplayer.video.width/rate;							fplayer.video.x=-Global._stage.stageWidth/2+orgX;				fplayer.video.y=orgY-fplayer.video.height/2;				startBt.width=Global._stage.stageWidth;				startBt.height=startBt.width/rate;							startBt.x=-Global._stage.stageWidth/2+orgX;				startBt.y=orgY-fplayer.video.height/2;				sp.x=-Global._stage.stageWidth/2+orgX;				sp.y=-Global._stage.stageHeight/2+orgY;				sp.width=Global._stage.stageWidth;				sp.height=Global._stage.stageHeight;											bgSp.x=-Global._stage.stageWidth/2+orgX;				bgSp.y=-Global._stage.stageHeight/2+orgY;				bgSp.width=Global._stage.stageWidth+200;				bgSp.height=Global._stage.stageHeight+200;				bgSp.visible=true;								//startBt.x=orgX;				//startBt.y=orgY;				Global._stage.addChild(bgSp); 				Global._stage.addChild(fplayer.video); 								videoMC.loadingBarBg.x=-Global._stage.stageWidth/2+orgX;				videoMC.loadingBarBg.y=-Global._stage.stageHeight/2+orgY;				videoMC.loadingBarBg.width=Global._stage.stageWidth+200;				videoMC.loadingBarBg.height=Global._stage.stageHeight+200;				videoMC.loadingBar.x=orgX;				videoMC.loadingBar.y=orgY;				Global._stage.addChild(videoMC.loadingBarBg); 				Global._stage.addChild(videoMC.loadingBar); 								Global._stage.addChild(sp);				Global._stage.addChild(startBt);		}		private function _fullScreen(e:FullScreenEvent){			trace(":::"+e.fullScreen );			if (e.fullScreen == true) {			}else{				fplayer.video.x=oldX;				fplayer.video.y=oldY;				fplayer.video.width=_vwidth;				fplayer.video.height=_vheight;				sp.x=oldX1;				sp.y=oldY1;				sp.width=_vwidth;				sp.height=_vheight;				startBt.width=444;				startBt.height=253;				startBt.x=startBt.oldX;				startBt.y=startBt.oldY;				this.addChild(fplayer.video);											bgSp.visible=false;								this.addChild(videoMC.loadingBarBg);				this.addChild(videoMC.loadingBar);								videoMC.loadingBar.x=loadingBarX;				videoMC.loadingBar.y=loadingBarY;				videoMC.loadingBarBg.x=loadingBarBgX;				videoMC.loadingBarBg.y=loadingBarBgY;				videoMC.loadingBarBg.width=_vwidth;				videoMC.loadingBarBg.height=_vheight;				this.addChild(sp);				this.addChild(startBt);				this.addChild(playBar);			}		}		private function durationDownHandler(e:MouseEvent){			//fplayer.stream.pause();						Global._stage.addEventListener(MouseEvent.MOUSE_UP,durationHandler);			playBar.loadingBar.v.addEventListener(MouseEvent.MOUSE_MOVE,durationMoveHandler);			fplayer.stream.seek(fplayer.videoDuration*(e.localX/e.currentTarget.width));		}		private function durationHandler(e:MouseEvent){			Global._stage.removeEventListener(MouseEvent.MOUSE_UP,durationHandler);			playBar.loadingBar.v.removeEventListener(MouseEvent.MOUSE_MOVE,durationMoveHandler);			if(videoIsPlay)fplayer.stream.resume();		}		private function durationMoveHandler(e:MouseEvent){			fplayer.stream.seek(fplayer.videoDuration*(e.localX/e.currentTarget.width));		}		private function chkLoaded(e:Event){			playBar.loadingBar.loadByteVar.scaleX=fplayer.stream.bytesLoaded/fplayer.stream.bytesTotal;			//trace(Global.curModle);		}		private function videoStart(e:Event){			//videoIsPlay=true;			//playBar.playerBt.gotoAndStop(2);			playBar.playerBt.gotoAndStop(2);			addEventListener(Event.ENTER_FRAME,chkLoaded);			trace("start");		}		private function videoStop(e:Event){			//startBt.visible=true;			//removeEventListener(Event.ENTER_FRAME,chkLoaded);			//isStart=false;			videoIsPlay=false;						trace("videoStop");						fplayer.setVideoURL(Global.curVideoURL);			fplayer.stream.pause();			setTimeout(function(){playBar.playerBt.gotoAndStop(1);},100);						if ( ExternalInterface.available ) {				ExternalInterface.call( "onendjs" );			}		}		private function playerDuration(e:EventEx){			playBar.loadingBar.loadVar.scaleX=e.data/fplayer.videoDuration;			playBar.timeTxt.text=fplayer.playtime()+"/"+int(fplayer.videoDuration);			//if(fplayer.stream.time>96)trace("@@@@@");						//playBar.loadingBar.arrow.x=playBar.loadingBar.loadVar.x+playBar.loadingBar.loadVar.width-1;		}		private function removeAllPlane(num:Number=0){		}		private function playerButton(e:MouseEvent){			startBt.visible=false;			trace(videoIsPlay);			if(videoIsPlay){				videoIsPlay=false;				fplayer.stream.pause();				playBar.playerBt.gotoAndStop(1);			}else{				videoIsPlay=true;				fplayer.stream.resume();				playBar.playerBt.gotoAndStop(2);			}		}		private function muteBtFun(e:MouseEvent){			var arrn=Number(String(e.target.name).split("b")[1]);			playBar.muteBt.vMC.gotoAndStop(arrn+1);			//fplayer.setVolume(arrn*.5);			SoundMixer.soundTransform=new SoundTransform(arrn*.5);			/*			if(isMute){				isMute=false;				playBar.muteBt.gotoAndStop(1);				fplayer.setVolume(1);			}else{				isMute=true;				playBar.muteBt.gotoAndStop(2);				fplayer.setVolume(0);			}*/		}	}}